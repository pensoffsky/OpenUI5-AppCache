<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<control xmlns="http://www.sap.com/sap.ui.library.xsd">
    <name>ListBase</name>
    <derived/>
    <author>SAP SE</author>
    <documentation>sap.m.ListBase Control provides a basic functionality of List and Table. Selection, deletion, unread states and inset style are also maintained here.

Note: The ListBase including all contained items is completely re-rendered when the data of a bound model is changed. Due to the limited hardware resources of mobile devices this can lead to longer delays for lists with many items. As such the usage of a list is not recommended for these use cases.</documentation>
    <since>1.16</since>
    <baseType>sap.ui.core/Control</baseType>
    <properties>
        <property group="Appearance" defaultValue="false" type="sap.ui.core/boolean" name="inset">
            <documentation>Inset style false/true</documentation>
        </property>
        <property group="Misc" type="sap.ui.core/string" name="headerText">
            <documentation>The header text appearing in the list/table header.
Note: if &quot;headerToolbar&quot; aggregation is set, then this property is ignored.</documentation>
        </property>
        <property since="1.14" group="Appearance" defaultValue="Standard" type="sap.m/ListHeaderDesign" name="headerDesign">
            <documentation>List header style. Possible vales are &quot;Standard&quot; and &quot;Plain&quot;</documentation>
            <deprecation since="1.16">Has no functionality since 1.16</deprecation>
        </property>
        <property group="Misc" type="sap.ui.core/string" name="footerText">
            <documentation>Footer Text</documentation>
        </property>
        <property group="Behavior" defaultValue="None" type="sap.m/ListMode" name="mode">
            <documentation>Mode of a list (e.g. None, SingleSelect, MultiSelect, Delete, etc.)</documentation>
        </property>
        <property group="Dimension" defaultValue="100%" type="sap.ui.core/CSSSize" name="width">
            <documentation>Sets the width of the list.</documentation>
        </property>
        <property group="Behavior" defaultValue="false" type="sap.ui.core/boolean" name="includeItemInSelection">
            <documentation>This property decides if the list item interacts with the selection. If it is &quot;true&quot;, a tap on the item will set the selection control in front of the list item.</documentation>
        </property>
        <property group="Misc" defaultValue="false" type="sap.ui.core/boolean" name="showUnread">
            <documentation>Activates the unread feature for all items.</documentation>
        </property>
        <property group="Misc" type="sap.ui.core/string" name="noDataText">
            <documentation>This text is displayed when the control has no data.</documentation>
        </property>
        <property group="Misc" defaultValue="true" type="sap.ui.core/boolean" name="showNoData">
            <documentation>Enables an information text(see &quot;noDataText&quot; property) when the control has no data.</documentation>
        </property>
        <property since="1.20.2" group="Behavior" defaultValue="true" type="sap.ui.core/boolean" name="enableBusyIndicator">
            <documentation>When this property is set to &quot;true&quot;, the List/Table will automatically display a BusyIndicator when it detects that data is being loaded or filtered. This BusyIndicator blocks the interaction with the items until data loading is finished.
For the List/Table controls BusyIndicator will be shown after one second. This behavior can be customized by setting the &quot;busyIndicatorDelay&quot; property.
When this property is set to &quot;false&quot;, items will stay on the List/Table until data loading is finished.</documentation>
        </property>
        <property group="Misc" defaultValue="true" type="sap.ui.core/boolean" name="modeAnimationOn">
            <documentation>Defines if animations will be shown when activating or deactivating selection modes.</documentation>
        </property>
        <property group="Appearance" defaultValue="All" type="sap.m/ListSeparators" name="showSeparators">
            <documentation>Defines which separator style will be used.</documentation>
        </property>
        <property group="Misc" defaultValue="Both" type="sap.m/SwipeDirection" name="swipeDirection">
            <documentation>Direction of swipe(e.g LeftToRight, RightToLeft, Both) to bring in a control on the right hand side of the list item.</documentation>
        </property>
        <property since="1.16" group="Behavior" defaultValue="false" type="sap.ui.core/boolean" name="growing">
            <documentation>Sets the growing(paging) feature of control.
Note: This feature only works when &quot;items&quot; aggregation is bound. Growing must not be used together with two-way binding!</documentation>
        </property>
        <property since="1.16" group="Misc" defaultValue="20" type="sap.ui.core/int" name="growingThreshold">
            <documentation>Number of items requested from the server. To activate this you should set the &quot;growing&quot; property to &quot;true&quot;.</documentation>
        </property>
        <property since="1.16" group="Appearance" type="sap.ui.core/string" name="growingTriggerText">
            <documentation>This text is displayed on the trigger button which is responsible to load new page at the end of the list. The default is a translated text (&quot;More&quot;) coming from the message bundle.
This property can be used only if &quot;growing&quot; property is set &quot;true&quot;</documentation>
        </property>
        <property since="1.16" group="Behavior" defaultValue="false" type="sap.ui.core/boolean" name="growingScrollToLoad">
            <documentation>If true, user can scroll end to trigger a new page request. Otherwise a trigger button is displayed at the bottom of the list.
This property can be used only if &quot;growing&quot; property is set &quot;true&quot; and if you only have one instance of this control inside the scroll container(e.g Page).</documentation>
        </property>
        <property since="1.16.6" group="Behavior" defaultValue="true" type="sap.ui.core/boolean" name="rememberSelections">
            <documentation>By default, if you have binding then the control remembers selections after binding update(sorting, filter, refresh). If this is not a desired behavior for your use case, you can switch this off with setting it to &quot;false&quot;.</documentation>
        </property>
    </properties>
    <events>
        <event allowPreventDefault="false" name="select">
            <documentation>Event is fired when selection is changed by user interaction. In &quot;multi-selection&quot; mode, this event is also fired on &quot;deselect&quot;</documentation>
            <deprecation since="1.16">Instead use &quot;selectionChange&quot; event.</deprecation>
            <parameters>
                <parameter type="sap.m/ListItemBase" name="listItem">
                    <documentation>The list item which fired the select.</documentation>
                </parameter>
            </parameters>
        </event>
        <event allowPreventDefault="false" since="1.16" name="selectionChange">
            <documentation>Event is fired when selection is changed via user interaction inside the control.</documentation>
            <parameters>
                <parameter type="sap.m/ListItemBase" name="listItem">
                    <documentation>The list item whose selection has changed. In &quot;multi-selection&quot; mode, only the up-most selected item is returned. This parameter can be used for single-selection modes.</documentation>
                </parameter>
                <parameter type="sap.m/ListItemBase[]" name="listItems">
                    <documentation>This parameter is filled with array of list items whose selection has changed. This parameter can be used for multi-selection mode.</documentation>
                </parameter>
                <parameter type="sap.ui.core/boolean" name="selected">
                    <documentation>This flag indicates whether the &quot;listItem&quot; parameter is selected or not.</documentation>
                </parameter>
            </parameters>
        </event>
        <event allowPreventDefault="false" name="delete">
            <documentation>Event is fired when delete icon is pressed by user.</documentation>
            <parameters>
                <parameter type="sap.m/ListItemBase" name="listItem">
                    <documentation>The list item which fired the delete.</documentation>
                </parameter>
            </parameters>
        </event>
        <event allowPreventDefault="true" name="swipe">
            <documentation>This event is fired when a user swipes to bring in a control and before swipeContent is shown on the right hand side of list item. So, you can easily change swipeContent according to swiped list item. Call the preventDefault method of the event object to disable swipe.</documentation>
            <parameters>
                <parameter type="sap.m/ListItemBase" name="listItem">
                    <documentation>The listitem which fired the swipe.</documentation>
                </parameter>
                <parameter type="sap.ui.core/Control" name="swipeContent">
                    <documentation>Given swipeContent control to show on the right hand side of a list item.</documentation>
                </parameter>
                <parameter type="sap.ui.core/Control" name="srcControl">
                    <documentation>Holds which control caused the swipe event in within the Item.</documentation>
                </parameter>
            </parameters>
        </event>
        <event allowPreventDefault="false" since="1.16" name="growingStarted">
            <documentation>This event is called when &quot;growing&quot; feature is enabled and before new page loaded.</documentation>
            <deprecation since="1.16.3">Instead, use &quot;updateStarted&quot; event.</deprecation>
            <parameters>
                <parameter type="sap.ui.core/int" name="actual">
                    <documentation>Actual number of items.</documentation>
                </parameter>
                <parameter type="sap.ui.core/int" name="total">
                    <documentation>Total number of items.</documentation>
                </parameter>
            </parameters>
        </event>
        <event allowPreventDefault="false" since="1.16" name="growingFinished">
            <documentation>This event is called when &quot;growing&quot; feature is enabled and after new page loaded and DOM updated.</documentation>
            <deprecation since="1.16.3">Instead, use &quot;updateFinished&quot; event.</deprecation>
            <parameters>
                <parameter type="sap.ui.core/int" name="actual">
                    <documentation>Actual number of items.</documentation>
                </parameter>
                <parameter type="sap.ui.core/int" name="total">
                    <documentation>Total number of items.</documentation>
                </parameter>
            </parameters>
        </event>
        <event allowPreventDefault="false" since="1.16.3" name="updateStarted">
            <documentation>This event is called before items binding is updated.
Note: Event handler should not invalidate the control.</documentation>
            <parameters>
                <parameter type="sap.ui.core/string" name="reason">
                    <documentation>The reason of update. Possible values are &quot;Binding&quot;, &quot;Filter&quot;, &quot;Sort&quot;, &quot;Growing&quot;, &quot;Change&quot;, &quot;Refresh&quot;, &quot;Context&quot;</documentation>
                </parameter>
                <parameter type="sap.ui.core/int" name="actual">
                    <documentation>Actual number of items.</documentation>
                </parameter>
                <parameter type="sap.ui.core/int" name="total">
                    <documentation>The total count of bound items. This parameter can be used if &quot;growing&quot; feature is enabled.</documentation>
                </parameter>
            </parameters>
        </event>
        <event allowPreventDefault="false" since="1.16.3" name="updateFinished">
            <documentation>This event is called after items binding and afterwards related DOM is updated.</documentation>
            <parameters>
                <parameter type="sap.ui.core/string" name="reason">
                    <documentation>The reason of update. Possible values are &quot;Binding&quot;, &quot;Filter&quot;, &quot;Sort&quot;, &quot;Growing&quot;, &quot;Change&quot;, &quot;Refresh&quot;, &quot;Context&quot;</documentation>
                </parameter>
                <parameter type="sap.ui.core/int" name="actual">
                    <documentation>Actual number of items.</documentation>
                </parameter>
                <parameter type="sap.ui.core/int" name="total">
                    <documentation>The total count of bound items. This parameter can be used if &quot;growing&quot; feature is enabled.</documentation>
                </parameter>
            </parameters>
        </event>
        <event allowPreventDefault="false" since="1.20" name="itemPress">
            <documentation>This event is called when an item is pressed regardless of the selection mode.
NOTE: This event is fired for all kind of list items unless the item's type is &quot;Inactive&quot;.</documentation>
            <parameters>
                <parameter type="sap.m/ListItemBase" name="listItem">
                    <documentation>The list item which fired the pressed event.
NOTE: This event is fired also for &quot;GroupHeaderListItem&quot; which does not have binding context.</documentation>
                </parameter>
                <parameter type="sap.ui.core/Control" name="srcControl">
                    <documentation>The control which caused the press event within the container.</documentation>
                </parameter>
            </parameters>
        </event>
    </events>
    <aggregations default="items">
        <aggregation bindable="bindable" cardinality="0..n" type="sap.m/ListItemBase" name="items">
            <documentation>The items of this list or rows of the table.</documentation>
        </aggregation>
        <aggregation cardinality="0..1" type="sap.ui.core/Control" name="swipeContent">
            <documentation>User can swipe to bring in this control on the right hand side of a list item.
Note: This functionality gets disabled for non-touch devices.</documentation>
        </aggregation>
        <aggregation cardinality="0..1" since="1.16" type="sap.m/Toolbar" name="headerToolbar">
            <documentation>Header can be used as a Toolbar to add extra controls for user interactions.
Note: This aggregation overwrites &quot;headerText&quot; property.</documentation>
        </aggregation>
        <aggregation cardinality="0..1" since="1.16" type="sap.m/Toolbar" name="infoToolbar">
            <documentation>InfoBar is placed below the header and can be used to show extra information to the user.</documentation>
        </aggregation>
    </aggregations>
    <associations>
        <association since="1.28.0" cardinality="0..n" type="sap.ui.core/Control" name="ariaLabelledBy">
            <documentation>Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby).</documentation>
        </association>
    </associations>
    <methods>
        <method type="sap.m/ListItemBase" name="getSelectedItem">
            <documentation>Returns selected list item. When no item is selected, &quot;null&quot; is returned. When &quot;multi-selection&quot; is enabled and multiple items are selected, only the up-most selected item is returned.</documentation>
        </method>
        <method type="sap.m/ListBase" name="setSelectedItem">
            <documentation>Selects or deselects the given list item.</documentation>
            <parameters>
                <parameter type="sap.m/ListItemBase" name="listItem">
                    <documentation>The list item whose selection to be changed. This parameter is mandatory.</documentation>
                </parameter>
                <parameter type="sap.ui.core/boolean" name="select">
                    <documentation>Sets selected status of the list item. Default value is true.</documentation>
                </parameter>
            </parameters>
        </method>
        <method type="sap.m/ListItemBase[]" name="getSelectedItems">
            <documentation>Returns an array containing the selected list items. If no items are selected, an empty array is returned.</documentation>
        </method>
        <method type="sap.m/ListBase" name="setSelectedItemById">
            <documentation>Sets a list item to be selected by id. In single mode the method removes the previous selection.</documentation>
            <parameters>
                <parameter type="sap.ui.core/string" name="id">
                    <documentation>The id of the list item whose selection to be changed.</documentation>
                </parameter>
                <parameter type="sap.ui.core/boolean" name="select">
                    <documentation>Sets selected status of the list item. Default value is true.</documentation>
                </parameter>
            </parameters>
        </method>
        <method since="1.18.6" type="sap.ui.core/object[]" name="getSelectedContexts">
            <documentation>Returns the binding contexts of the selected items.
Note: This method returns an empty array if no databinding is used.</documentation>
            <parameters>
                <parameter type="sap.ui.core/boolean" name="all">
                    <documentation>Set true to include even invisible selected items(e.g. the selections from the previous filters).</documentation>
                </parameter>
            </parameters>
        </method>
        <method type="sap.m/ListBase" name="removeSelections">
            <documentation>Removes visible selections of the current selection mode.</documentation>
            <parameters>
                <parameter type="sap.ui.core/boolean" name="all">
                    <documentation>Since version 1.16.3. This control keeps old selections after filter or sorting. Set this parameter &quot;true&quot; to remove all selections.</documentation>
                </parameter>
            </parameters>
        </method>
        <method since="1.16" type="sap.m/ListBase" name="selectAll">
            <documentation>Select all items in &quot;MultiSelection&quot; mode.</documentation>
        </method>
        <method since="1.16" type="sap.ui.core/object" name="getGrowingInfo">
            <documentation>Returns growing information as object with &quot;actual&quot; and &quot;total&quot; keys.
Note: This function returns &quot;null&quot; if &quot;growing&quot; feature is disabled.</documentation>
        </method>
        <method type="sap.m/ListBase" name="swipeOut">
            <documentation>After swipeContent is shown, user can interact with this control(e.g Tap). After interaction is done, you can/should use this method to hide swipeContent from screen.
Note: If users try to tap inside of the list but outside of the swipeContent then control hides automatically.</documentation>
            <parameters>
                <parameter type="sap.ui.core/any" name="callback">
                    <documentation>This callback function is called with two parameters(swipedListItem and swipedContent) after swipe-out animation is finished.</documentation>
                </parameter>
            </parameters>
        </method>
        <method type="sap.m/ListItemBase" name="getSwipedItem">
            <documentation>Returns swiped list item. When no item is swiped, &quot;null&quot; is returned.</documentation>
        </method>
    </methods>
</control>
